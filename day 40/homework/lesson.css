/* კონტეინერი ხდება flexbox კონტეინერი */
.container {
    display: flex; /* აქ ჩვენ კონტეინერს ვანიშნებთ, რომ იყოს flexbox მოდელში */
  }
  
  /* განსაზღვრავს ელემენტების განლაგებას (ხაზში ან სვეტში) */
  .container {
    flex-direction: row; /* ელემენტები განლაგდება ჰორიზონტალურად, მარცხნიდან მარჯვნივ */
  }
  
  /* თუ ერთი ხაზის ფარგლებში აღარ ეტევიან, ისინი გადადიან ახალ ხაზზე */
  .container {
    flex-wrap: wrap; /* თუ სივრცე არ არის საკმარისი, ელემენტები გადადიან ახალ ხაზზე */
  }
  
  /* სივრცის განაწილება ელემენტებს შორის */
  .container {
    justify-content: space-between; /* ელემენტები განლაგდება ისე, რომ მხოლოდ მათ შორის იქნება სივრცე */
  }
  
  /* ელემენტების ვერტიკალური გამწკრივება (დამოკიდებულია კონტეინერის სიმაღლეზე) */
  .container {
    align-items: center; /* ელემენტები განლაგდება ვერტიკალურად ცენტრში */
  }
  
  /* კონკრეტულ ელემენტს შეუძლია საკუთარი გამწკრივება გამართოს */
  .item {
    align-self: flex-start; /* ინდივიდუალურად ვაანიშნებთ, რომ ეს ელემენტი უნდა განლაგდეს ზევით */
  }
  
  /* განსაზღვრავს თუ რამდენად გაიზრდება ელემენტი დამატებითი სივრცის შევსებისთვის */
  .item {
    flex-grow: 1; /* ელემენტი გაიზრდება იმდენად, რამდენიც სივრცე არის დარჩენილი */
  }
  
  /* განსაზღვრავს თუ რამდენად შეიძლება შემცირდეს ელემენტი, როცა ადგილი არ არის საკმარისი */
  .item {
    flex-shrink: 1; /* ელემენტი შემცირდება, რომ ჩაეტიოს კონტეინერში */
  }
  
  /* საწყისი ზომა, რომლის მიხედვითაც განისაზღვრება ელემენტის ზომა */
  .item {
    flex-basis: 200px; /* ელემენტის საწყისი ზომა არის 200px */
  }
  
  /* მოკლე ფორმა, რომელიც აერთიანებს grow, shrink და basis პარამეტრებს */
  .item {
    flex: 1 0 200px; /* ელემენტი გაიზრდება, არ შემცირდება, ხოლო მისი საწყისი ზომა არის 200px */
  }
  
  /* ელემენტების რიგი კონტეინერში */
  .item {
    order: 2; /* ელემენტს მიენიჭება რიგი 2, რაც ნიშნავს რომ იგი არ იქნება პირველ რიგში */
  }
  




  /* Content (შინაარსი) */
.element {
    width: 200px; /* შინაარსის განზომილება (სიგანე) */
    height: 100px; /* შინაარსის განზომილება (სიმაღლე) */
    background-color: lightblue; /* Content-ის ფონი */
  }
  
  /* Padding (შიდა ზღვარი) */
  .element {
    padding: 20px; /* padding-ის ზომა (20px) - ეს არის სივრცე content-სა და border-ს შორის */
    /* padding ქმნის სივრცეს content-ის ირგვლივ, მაგრამ არ აისახება ელემენტის საერთო ზომაზე */
  }
  
  /* Border (საზღვარი) */
  .element {
    border: 5px solid black; /* border-ის ზომა, ტიპი და ფერი */
    /* Border არის ხაზები, რომლებიც არის padding-ის გარშემო */
  }
  
  /* Margin (გარე სივრცე) */
  .element {
    margin: 30px; /* margin-ის ზომა (30px) - ეს არის სივრცე ელემენტსა და სხვა ელემენტებს შორის */
    /* Margin ქმნის სივრცეს ელემენტსა და სხვა ელემენტებს შორის */
  }

  
